/*********************
CLEARFIXIN'
*********************/

// Contain floats: nicolasgallagher.com/micro-clearfix-hack/
.clearfix {
  zoom: 1;
  &:before, &:after { content: ""; display: table; }
  &:after { clear: both; }
}

/*********************
TOOLS
*********************/

// BORDER-BOX ALL THE THINGS! (http://paulirish.com/2012/box-sizing-border-box-ftw/)
* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing:    border-box;
  box-sizing:         border-box;
}

// http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
.image-replacement {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}


/*********************
TYPOGRAPHY
*********************/

/*
use the best ampersand
http://simplebits.com/notebook/2008/08/14/ampersands-2/
*/
span.amp {
  font-family: Baskerville,'Goudy Old Style',Palatino,'Book Antiqua',serif !important;
  font-style: italic;
}

// text alignment
.text-left   { text-align: left; }
.text-center { text-align: center; }
.text-right  { text-align: right; }

/*********************
TRANSITION
*********************/

/*
I totally rewrote this to be cleaner and easier to use.
You'll need to be using Sass 3.2+ for these to work.
Thanks to @anthonyshort for the inspiration on these.
USAGE: @include transition(all 0.2s ease-in-out);
*/

@mixin transition($transition...) {
  // defining prefixes so we can use them in mixins below
  $prefixes:      ("-webkit", "-ms", "-o",  "");
  @each $prefix in $prefixes {
    #{$prefix}-transition: $transition;
  }

  transition: $transition;
}

/*********************
CSS3 GRADIENTS
Be careful with these since they can
really slow down your CSS. Don't overdue it.
*********************/

/* @include css-gradient(#dfdfdf,#f8f8f8); */
@mixin css-gradient-left-right($from: #dfdfdf, $to: #f8f8f8) {
  background-color: $to;
  background-image: -webkit-gradient(linear, left center, right center, from($from), to($to));
  background-image: -webkit-linear-gradient(top, $from, $to);
  background-image: -moz-linear-gradient(top, $from, $to);
  background-image: -o-linear-gradient(top, $from, $to);
  background-image: linear-gradient(to bottom, $from, $to);
}

@mixin css-gradient-top-down($from: #dfdfdf, $to: #f8f8f8) {
  background-color: $to;
  background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
  background-image: -webkit-linear-gradient(top, $from, $to);
  background-image: -moz-linear-gradient(top, $from, $to);
  background-image: -o-linear-gradient(top, $from, $to);
  background-image: linear-gradient(to bottom, $from, $to);
}

/*********************
BOX SIZING
*********************/

/* @include box-sizing(border-box); */
/* NOTE: value of "padding-box" is only supported in Gecko. So
probably best not to use it. I mean, were you going to anyway? */
@mixin box-sizing($type: border-box) {
  -webkit-box-sizing: $type;
  -moz-box-sizing:    $type;
  -ms-box-sizing:     $type;
  box-sizing:         $type;
}

/*********************
BOX SHADOW
*********************/
@mixin box-shadow( $xoffset: 0, $yoffset: 0, $spread: 0, $opacity: 0.25 ) {
  -moz-box-shadow: $xoffset $yoffset $spread rgba(0,0,0,$opacity);
  -webkit-box-shadow: $xoffset $yoffset $spread rgba(0,0,0,$opacity);
  -o-box-shadow: $xoffset $yoffset $spread rgba(0,0,0,$opacity);
  box-shadow: $xoffset $yoffset $spread rgba(0,0,0,$opacity);
}

/*********************
BORDER RADIUS
*********************/
@mixin border-radius( $tl, $tr, $br, $bl ) {
  -moz-border-radius: $tl $tr $br $bl;
  -webkit-border-radius: $tl $tr $br $bl;
  -o-border-radius: $tl $tr $br $bl;
  border-radius: $tl $tr $br $bl;
}

/*********************
BORDER RADIUS - Even
*********************/
@mixin rounded( $size ) {
  -moz-border-radius: $size;
  -webkit-border-radius: $size;
  -o-border-radius: $size;
  border-radius: $size;
}

/*********************
TRIANGLES
*********************/
@mixin triangle ( $direction, $size, $color ) {

    width: 0;
    height: 0;

    @if $direction == 'right' {

        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;

    } @elseif $direction == 'down' {

        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;

    } @elseif $direction == 'left' {

        border-top: $size solid transparent;
        border-bottom: $size solid transparent; 
        border-right: $size solid $color;

    } @elseif $direction == 'up' {

        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;

    }
}